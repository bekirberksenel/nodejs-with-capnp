"use strict";
/**
 * @author jdiaz5513
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var debug_1 = require("debug");
var list_element_size_1 = require("../list-element-size");
var list_1 = require("./list");
var pointer_1 = require("./pointer");
var trace = debug_1.default("capnp:list:composite");
trace("load");
function CompositeList(CompositeClass) {
    var _a;
    return _a = /** @class */ (function (_super) {
            tslib_1.__extends(class_1, _super);
            function class_1() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_1.prototype.get = function (index) {
                return new CompositeClass(this.segment, this.byteOffset, this._capnp.depthLimit - 1, index);
            };
            class_1.prototype.set = function (index, value) {
                pointer_1.copyFrom(value, this.get(index));
            };
            class_1.prototype.toString = function () {
                return "Composite_" + _super.prototype.toString.call(this) + ",cls:" + CompositeClass.toString();
            };
            return class_1;
        }(list_1.List)),
        _a._capnp = {
            compositeSize: CompositeClass._capnp.size,
            displayName: "List<" + CompositeClass._capnp.displayName + ">",
            size: list_element_size_1.ListElementSize.COMPOSITE
        },
        _a;
}
exports.CompositeList = CompositeList;

//# sourceMappingURL=composite-list.js.map
