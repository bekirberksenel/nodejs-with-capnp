"use strict";
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * This file has been automatically generated by the [capnpc-ts utility](https://github.com/jdiaz5513/capnp-ts).
 */
var capnp = require("../index");
var index_1 = require("../index");
exports._capnpFileId = "a93fc509624c72d9";
var Node_Parameter = /** @class */ (function (_super) {
    tslib_1.__extends(Node_Parameter, _super);
    function Node_Parameter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Node_Parameter.prototype.getName = function () { return index_1.Struct.getText(0, this); };
    Node_Parameter.prototype.setName = function (value) { index_1.Struct.setText(0, value, this); };
    Node_Parameter.prototype.toString = function () { return "Node_Parameter_" + _super.prototype.toString.call(this); };
    Node_Parameter._capnp = { displayName: "Parameter", id: "b9521bccf10fa3b1", size: new index_1.ObjectSize(0, 1) };
    return Node_Parameter;
}(index_1.Struct));
exports.Node_Parameter = Node_Parameter;
var Node_NestedNode = /** @class */ (function (_super) {
    tslib_1.__extends(Node_NestedNode, _super);
    function Node_NestedNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Node_NestedNode.prototype.getName = function () { return index_1.Struct.getText(0, this); };
    Node_NestedNode.prototype.setName = function (value) { index_1.Struct.setText(0, value, this); };
    Node_NestedNode.prototype.getId = function () { return index_1.Struct.getUint64(0, this); };
    Node_NestedNode.prototype.setId = function (value) { index_1.Struct.setUint64(0, value, this); };
    Node_NestedNode.prototype.toString = function () { return "Node_NestedNode_" + _super.prototype.toString.call(this); };
    Node_NestedNode._capnp = { displayName: "NestedNode", id: "debf55bbfa0fc242", size: new index_1.ObjectSize(8, 1) };
    return Node_NestedNode;
}(index_1.Struct));
exports.Node_NestedNode = Node_NestedNode;
var Node_Struct = /** @class */ (function (_super) {
    tslib_1.__extends(Node_Struct, _super);
    function Node_Struct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Node_Struct.prototype.getDataWordCount = function () { return index_1.Struct.getUint16(14, this); };
    Node_Struct.prototype.setDataWordCount = function (value) { index_1.Struct.setUint16(14, value, this); };
    Node_Struct.prototype.getPointerCount = function () { return index_1.Struct.getUint16(24, this); };
    Node_Struct.prototype.setPointerCount = function (value) { index_1.Struct.setUint16(24, value, this); };
    Node_Struct.prototype.getPreferredListEncoding = function () { return index_1.Struct.getUint16(26, this); };
    Node_Struct.prototype.setPreferredListEncoding = function (value) { index_1.Struct.setUint16(26, value, this); };
    Node_Struct.prototype.getIsGroup = function () { return index_1.Struct.getBit(224, this); };
    Node_Struct.prototype.setIsGroup = function (value) { index_1.Struct.setBit(224, value, this); };
    Node_Struct.prototype.getDiscriminantCount = function () { return index_1.Struct.getUint16(30, this); };
    Node_Struct.prototype.setDiscriminantCount = function (value) { index_1.Struct.setUint16(30, value, this); };
    Node_Struct.prototype.getDiscriminantOffset = function () { return index_1.Struct.getUint32(32, this); };
    Node_Struct.prototype.setDiscriminantOffset = function (value) { index_1.Struct.setUint32(32, value, this); };
    Node_Struct.prototype.adoptFields = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(3, this)); };
    Node_Struct.prototype.disownFields = function () { return index_1.Struct.disown(this.getFields()); };
    Node_Struct.prototype.getFields = function () { return index_1.Struct.getList(3, Node_Struct._Fields, this); };
    Node_Struct.prototype.hasFields = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(3, this)); };
    Node_Struct.prototype.initFields = function (length) { return index_1.Struct.initList(3, Node_Struct._Fields, length, this); };
    Node_Struct.prototype.setFields = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(3, this)); };
    Node_Struct.prototype.toString = function () { return "Node_Struct_" + _super.prototype.toString.call(this); };
    Node_Struct._capnp = { displayName: "struct", id: "9ea0b19b37fb4435", size: new index_1.ObjectSize(40, 6) };
    return Node_Struct;
}(index_1.Struct));
exports.Node_Struct = Node_Struct;
var Node_Enum = /** @class */ (function (_super) {
    tslib_1.__extends(Node_Enum, _super);
    function Node_Enum() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Node_Enum.prototype.adoptEnumerants = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(3, this)); };
    Node_Enum.prototype.disownEnumerants = function () { return index_1.Struct.disown(this.getEnumerants()); };
    Node_Enum.prototype.getEnumerants = function () { return index_1.Struct.getList(3, Node_Enum._Enumerants, this); };
    Node_Enum.prototype.hasEnumerants = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(3, this)); };
    Node_Enum.prototype.initEnumerants = function (length) { return index_1.Struct.initList(3, Node_Enum._Enumerants, length, this); };
    Node_Enum.prototype.setEnumerants = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(3, this)); };
    Node_Enum.prototype.toString = function () { return "Node_Enum_" + _super.prototype.toString.call(this); };
    Node_Enum._capnp = { displayName: "enum", id: "b54ab3364333f598", size: new index_1.ObjectSize(40, 6) };
    return Node_Enum;
}(index_1.Struct));
exports.Node_Enum = Node_Enum;
var Node_Interface = /** @class */ (function (_super) {
    tslib_1.__extends(Node_Interface, _super);
    function Node_Interface() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Node_Interface.prototype.adoptMethods = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(3, this)); };
    Node_Interface.prototype.disownMethods = function () { return index_1.Struct.disown(this.getMethods()); };
    Node_Interface.prototype.getMethods = function () { return index_1.Struct.getList(3, Node_Interface._Methods, this); };
    Node_Interface.prototype.hasMethods = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(3, this)); };
    Node_Interface.prototype.initMethods = function (length) { return index_1.Struct.initList(3, Node_Interface._Methods, length, this); };
    Node_Interface.prototype.setMethods = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(3, this)); };
    Node_Interface.prototype.adoptSuperclasses = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(4, this)); };
    Node_Interface.prototype.disownSuperclasses = function () { return index_1.Struct.disown(this.getSuperclasses()); };
    Node_Interface.prototype.getSuperclasses = function () { return index_1.Struct.getList(4, Node_Interface._Superclasses, this); };
    Node_Interface.prototype.hasSuperclasses = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(4, this)); };
    Node_Interface.prototype.initSuperclasses = function (length) { return index_1.Struct.initList(4, Node_Interface._Superclasses, length, this); };
    Node_Interface.prototype.setSuperclasses = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(4, this)); };
    Node_Interface.prototype.toString = function () { return "Node_Interface_" + _super.prototype.toString.call(this); };
    Node_Interface._capnp = { displayName: "interface", id: "e82753cff0c2218f", size: new index_1.ObjectSize(40, 6) };
    return Node_Interface;
}(index_1.Struct));
exports.Node_Interface = Node_Interface;
var Node_Const = /** @class */ (function (_super) {
    tslib_1.__extends(Node_Const, _super);
    function Node_Const() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Node_Const.prototype.adoptType = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(3, this)); };
    Node_Const.prototype.disownType = function () { return index_1.Struct.disown(this.getType()); };
    Node_Const.prototype.getType = function () { return index_1.Struct.getStruct(3, Type, this); };
    Node_Const.prototype.hasType = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(3, this)); };
    Node_Const.prototype.initType = function () { return index_1.Struct.initStructAt(3, Type, this); };
    Node_Const.prototype.setType = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(3, this)); };
    Node_Const.prototype.adoptValue = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(4, this)); };
    Node_Const.prototype.disownValue = function () { return index_1.Struct.disown(this.getValue()); };
    Node_Const.prototype.getValue = function () { return index_1.Struct.getStruct(4, Value, this); };
    Node_Const.prototype.hasValue = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(4, this)); };
    Node_Const.prototype.initValue = function () { return index_1.Struct.initStructAt(4, Value, this); };
    Node_Const.prototype.setValue = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(4, this)); };
    Node_Const.prototype.toString = function () { return "Node_Const_" + _super.prototype.toString.call(this); };
    Node_Const._capnp = { displayName: "const", id: "b18aa5ac7a0d9420", size: new index_1.ObjectSize(40, 6) };
    return Node_Const;
}(index_1.Struct));
exports.Node_Const = Node_Const;
var Node_Annotation = /** @class */ (function (_super) {
    tslib_1.__extends(Node_Annotation, _super);
    function Node_Annotation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Node_Annotation.prototype.adoptType = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(3, this)); };
    Node_Annotation.prototype.disownType = function () { return index_1.Struct.disown(this.getType()); };
    Node_Annotation.prototype.getType = function () { return index_1.Struct.getStruct(3, Type, this); };
    Node_Annotation.prototype.hasType = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(3, this)); };
    Node_Annotation.prototype.initType = function () { return index_1.Struct.initStructAt(3, Type, this); };
    Node_Annotation.prototype.setType = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(3, this)); };
    Node_Annotation.prototype.getTargetsFile = function () { return index_1.Struct.getBit(112, this); };
    Node_Annotation.prototype.setTargetsFile = function (value) { index_1.Struct.setBit(112, value, this); };
    Node_Annotation.prototype.getTargetsConst = function () { return index_1.Struct.getBit(113, this); };
    Node_Annotation.prototype.setTargetsConst = function (value) { index_1.Struct.setBit(113, value, this); };
    Node_Annotation.prototype.getTargetsEnum = function () { return index_1.Struct.getBit(114, this); };
    Node_Annotation.prototype.setTargetsEnum = function (value) { index_1.Struct.setBit(114, value, this); };
    Node_Annotation.prototype.getTargetsEnumerant = function () { return index_1.Struct.getBit(115, this); };
    Node_Annotation.prototype.setTargetsEnumerant = function (value) { index_1.Struct.setBit(115, value, this); };
    Node_Annotation.prototype.getTargetsStruct = function () { return index_1.Struct.getBit(116, this); };
    Node_Annotation.prototype.setTargetsStruct = function (value) { index_1.Struct.setBit(116, value, this); };
    Node_Annotation.prototype.getTargetsField = function () { return index_1.Struct.getBit(117, this); };
    Node_Annotation.prototype.setTargetsField = function (value) { index_1.Struct.setBit(117, value, this); };
    Node_Annotation.prototype.getTargetsUnion = function () { return index_1.Struct.getBit(118, this); };
    Node_Annotation.prototype.setTargetsUnion = function (value) { index_1.Struct.setBit(118, value, this); };
    Node_Annotation.prototype.getTargetsGroup = function () { return index_1.Struct.getBit(119, this); };
    Node_Annotation.prototype.setTargetsGroup = function (value) { index_1.Struct.setBit(119, value, this); };
    Node_Annotation.prototype.getTargetsInterface = function () { return index_1.Struct.getBit(120, this); };
    Node_Annotation.prototype.setTargetsInterface = function (value) { index_1.Struct.setBit(120, value, this); };
    Node_Annotation.prototype.getTargetsMethod = function () { return index_1.Struct.getBit(121, this); };
    Node_Annotation.prototype.setTargetsMethod = function (value) { index_1.Struct.setBit(121, value, this); };
    Node_Annotation.prototype.getTargetsParam = function () { return index_1.Struct.getBit(122, this); };
    Node_Annotation.prototype.setTargetsParam = function (value) { index_1.Struct.setBit(122, value, this); };
    Node_Annotation.prototype.getTargetsAnnotation = function () { return index_1.Struct.getBit(123, this); };
    Node_Annotation.prototype.setTargetsAnnotation = function (value) { index_1.Struct.setBit(123, value, this); };
    Node_Annotation.prototype.toString = function () { return "Node_Annotation_" + _super.prototype.toString.call(this); };
    Node_Annotation._capnp = { displayName: "annotation", id: "ec1619d4400a0290", size: new index_1.ObjectSize(40, 6) };
    return Node_Annotation;
}(index_1.Struct));
exports.Node_Annotation = Node_Annotation;
var Node_Which;
(function (Node_Which) {
    Node_Which[Node_Which["FILE"] = 0] = "FILE";
    Node_Which[Node_Which["STRUCT"] = 1] = "STRUCT";
    Node_Which[Node_Which["ENUM"] = 2] = "ENUM";
    Node_Which[Node_Which["INTERFACE"] = 3] = "INTERFACE";
    Node_Which[Node_Which["CONST"] = 4] = "CONST";
    Node_Which[Node_Which["ANNOTATION"] = 5] = "ANNOTATION";
})(Node_Which = exports.Node_Which || (exports.Node_Which = {}));
var Node = /** @class */ (function (_super) {
    tslib_1.__extends(Node, _super);
    function Node() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Node.prototype.getId = function () { return index_1.Struct.getUint64(0, this); };
    Node.prototype.setId = function (value) { index_1.Struct.setUint64(0, value, this); };
    Node.prototype.getDisplayName = function () { return index_1.Struct.getText(0, this); };
    Node.prototype.setDisplayName = function (value) { index_1.Struct.setText(0, value, this); };
    Node.prototype.getDisplayNamePrefixLength = function () { return index_1.Struct.getUint32(8, this); };
    Node.prototype.setDisplayNamePrefixLength = function (value) { index_1.Struct.setUint32(8, value, this); };
    Node.prototype.getScopeId = function () { return index_1.Struct.getUint64(16, this); };
    Node.prototype.setScopeId = function (value) { index_1.Struct.setUint64(16, value, this); };
    Node.prototype.adoptParameters = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(5, this)); };
    Node.prototype.disownParameters = function () { return index_1.Struct.disown(this.getParameters()); };
    Node.prototype.getParameters = function () { return index_1.Struct.getList(5, Node._Parameters, this); };
    Node.prototype.hasParameters = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(5, this)); };
    Node.prototype.initParameters = function (length) { return index_1.Struct.initList(5, Node._Parameters, length, this); };
    Node.prototype.setParameters = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(5, this)); };
    Node.prototype.getIsGeneric = function () { return index_1.Struct.getBit(288, this); };
    Node.prototype.setIsGeneric = function (value) { index_1.Struct.setBit(288, value, this); };
    Node.prototype.adoptNestedNodes = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(1, this)); };
    Node.prototype.disownNestedNodes = function () { return index_1.Struct.disown(this.getNestedNodes()); };
    Node.prototype.getNestedNodes = function () { return index_1.Struct.getList(1, Node._NestedNodes, this); };
    Node.prototype.hasNestedNodes = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(1, this)); };
    Node.prototype.initNestedNodes = function (length) { return index_1.Struct.initList(1, Node._NestedNodes, length, this); };
    Node.prototype.setNestedNodes = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(1, this)); };
    Node.prototype.adoptAnnotations = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(2, this)); };
    Node.prototype.disownAnnotations = function () { return index_1.Struct.disown(this.getAnnotations()); };
    Node.prototype.getAnnotations = function () { return index_1.Struct.getList(2, Node._Annotations, this); };
    Node.prototype.hasAnnotations = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(2, this)); };
    Node.prototype.initAnnotations = function (length) { return index_1.Struct.initList(2, Node._Annotations, length, this); };
    Node.prototype.setAnnotations = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(2, this)); };
    Node.prototype.isFile = function () { return index_1.Struct.getUint16(12, this) === 0; };
    Node.prototype.setFile = function () { index_1.Struct.setUint16(12, 0, this); };
    Node.prototype.getStruct = function () {
        index_1.Struct.testWhich("struct", index_1.Struct.getUint16(12, this), 1, this);
        return index_1.Struct.getAs(Node_Struct, this);
    };
    Node.prototype.initStruct = function () {
        index_1.Struct.setUint16(12, 1, this);
        return index_1.Struct.getAs(Node_Struct, this);
    };
    Node.prototype.isStruct = function () { return index_1.Struct.getUint16(12, this) === 1; };
    Node.prototype.setStruct = function () { index_1.Struct.setUint16(12, 1, this); };
    Node.prototype.getEnum = function () {
        index_1.Struct.testWhich("enum", index_1.Struct.getUint16(12, this), 2, this);
        return index_1.Struct.getAs(Node_Enum, this);
    };
    Node.prototype.initEnum = function () {
        index_1.Struct.setUint16(12, 2, this);
        return index_1.Struct.getAs(Node_Enum, this);
    };
    Node.prototype.isEnum = function () { return index_1.Struct.getUint16(12, this) === 2; };
    Node.prototype.setEnum = function () { index_1.Struct.setUint16(12, 2, this); };
    Node.prototype.getInterface = function () {
        index_1.Struct.testWhich("interface", index_1.Struct.getUint16(12, this), 3, this);
        return index_1.Struct.getAs(Node_Interface, this);
    };
    Node.prototype.initInterface = function () {
        index_1.Struct.setUint16(12, 3, this);
        return index_1.Struct.getAs(Node_Interface, this);
    };
    Node.prototype.isInterface = function () { return index_1.Struct.getUint16(12, this) === 3; };
    Node.prototype.setInterface = function () { index_1.Struct.setUint16(12, 3, this); };
    Node.prototype.getConst = function () {
        index_1.Struct.testWhich("const", index_1.Struct.getUint16(12, this), 4, this);
        return index_1.Struct.getAs(Node_Const, this);
    };
    Node.prototype.initConst = function () {
        index_1.Struct.setUint16(12, 4, this);
        return index_1.Struct.getAs(Node_Const, this);
    };
    Node.prototype.isConst = function () { return index_1.Struct.getUint16(12, this) === 4; };
    Node.prototype.setConst = function () { index_1.Struct.setUint16(12, 4, this); };
    Node.prototype.getAnnotation = function () {
        index_1.Struct.testWhich("annotation", index_1.Struct.getUint16(12, this), 5, this);
        return index_1.Struct.getAs(Node_Annotation, this);
    };
    Node.prototype.initAnnotation = function () {
        index_1.Struct.setUint16(12, 5, this);
        return index_1.Struct.getAs(Node_Annotation, this);
    };
    Node.prototype.isAnnotation = function () { return index_1.Struct.getUint16(12, this) === 5; };
    Node.prototype.setAnnotation = function () { index_1.Struct.setUint16(12, 5, this); };
    Node.prototype.toString = function () { return "Node_" + _super.prototype.toString.call(this); };
    Node.prototype.which = function () { return index_1.Struct.getUint16(12, this); };
    Node.FILE = Node_Which.FILE;
    Node.STRUCT = Node_Which.STRUCT;
    Node.ENUM = Node_Which.ENUM;
    Node.INTERFACE = Node_Which.INTERFACE;
    Node.CONST = Node_Which.CONST;
    Node.ANNOTATION = Node_Which.ANNOTATION;
    Node.Parameter = Node_Parameter;
    Node.NestedNode = Node_NestedNode;
    Node._capnp = { displayName: "Node", id: "e682ab4cf923a417", size: new index_1.ObjectSize(40, 6) };
    return Node;
}(index_1.Struct));
exports.Node = Node;
var Field_Slot = /** @class */ (function (_super) {
    tslib_1.__extends(Field_Slot, _super);
    function Field_Slot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Field_Slot.prototype.getOffset = function () { return index_1.Struct.getUint32(4, this); };
    Field_Slot.prototype.setOffset = function (value) { index_1.Struct.setUint32(4, value, this); };
    Field_Slot.prototype.adoptType = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(2, this)); };
    Field_Slot.prototype.disownType = function () { return index_1.Struct.disown(this.getType()); };
    Field_Slot.prototype.getType = function () { return index_1.Struct.getStruct(2, Type, this); };
    Field_Slot.prototype.hasType = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(2, this)); };
    Field_Slot.prototype.initType = function () { return index_1.Struct.initStructAt(2, Type, this); };
    Field_Slot.prototype.setType = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(2, this)); };
    Field_Slot.prototype.adoptDefaultValue = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(3, this)); };
    Field_Slot.prototype.disownDefaultValue = function () { return index_1.Struct.disown(this.getDefaultValue()); };
    Field_Slot.prototype.getDefaultValue = function () { return index_1.Struct.getStruct(3, Value, this); };
    Field_Slot.prototype.hasDefaultValue = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(3, this)); };
    Field_Slot.prototype.initDefaultValue = function () { return index_1.Struct.initStructAt(3, Value, this); };
    Field_Slot.prototype.setDefaultValue = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(3, this)); };
    Field_Slot.prototype.getHadExplicitDefault = function () { return index_1.Struct.getBit(128, this); };
    Field_Slot.prototype.setHadExplicitDefault = function (value) { index_1.Struct.setBit(128, value, this); };
    Field_Slot.prototype.toString = function () { return "Field_Slot_" + _super.prototype.toString.call(this); };
    Field_Slot._capnp = { displayName: "slot", id: "c42305476bb4746f", size: new index_1.ObjectSize(24, 4) };
    return Field_Slot;
}(index_1.Struct));
exports.Field_Slot = Field_Slot;
var Field_Group = /** @class */ (function (_super) {
    tslib_1.__extends(Field_Group, _super);
    function Field_Group() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Field_Group.prototype.getTypeId = function () { return index_1.Struct.getUint64(16, this); };
    Field_Group.prototype.setTypeId = function (value) { index_1.Struct.setUint64(16, value, this); };
    Field_Group.prototype.toString = function () { return "Field_Group_" + _super.prototype.toString.call(this); };
    Field_Group._capnp = { displayName: "group", id: "cafccddb68db1d11", size: new index_1.ObjectSize(24, 4) };
    return Field_Group;
}(index_1.Struct));
exports.Field_Group = Field_Group;
var Field_Ordinal_Which;
(function (Field_Ordinal_Which) {
    Field_Ordinal_Which[Field_Ordinal_Which["IMPLICIT"] = 0] = "IMPLICIT";
    Field_Ordinal_Which[Field_Ordinal_Which["EXPLICIT"] = 1] = "EXPLICIT";
})(Field_Ordinal_Which = exports.Field_Ordinal_Which || (exports.Field_Ordinal_Which = {}));
var Field_Ordinal = /** @class */ (function (_super) {
    tslib_1.__extends(Field_Ordinal, _super);
    function Field_Ordinal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Field_Ordinal.prototype.isImplicit = function () { return index_1.Struct.getUint16(10, this) === 0; };
    Field_Ordinal.prototype.setImplicit = function () { index_1.Struct.setUint16(10, 0, this); };
    Field_Ordinal.prototype.getExplicit = function () {
        index_1.Struct.testWhich("explicit", index_1.Struct.getUint16(10, this), 1, this);
        return index_1.Struct.getUint16(12, this);
    };
    Field_Ordinal.prototype.isExplicit = function () { return index_1.Struct.getUint16(10, this) === 1; };
    Field_Ordinal.prototype.setExplicit = function (value) {
        index_1.Struct.setUint16(10, 1, this);
        index_1.Struct.setUint16(12, value, this);
    };
    Field_Ordinal.prototype.toString = function () { return "Field_Ordinal_" + _super.prototype.toString.call(this); };
    Field_Ordinal.prototype.which = function () { return index_1.Struct.getUint16(10, this); };
    Field_Ordinal.IMPLICIT = Field_Ordinal_Which.IMPLICIT;
    Field_Ordinal.EXPLICIT = Field_Ordinal_Which.EXPLICIT;
    Field_Ordinal._capnp = { displayName: "ordinal", id: "bb90d5c287870be6", size: new index_1.ObjectSize(24, 4) };
    return Field_Ordinal;
}(index_1.Struct));
exports.Field_Ordinal = Field_Ordinal;
var Field_Which;
(function (Field_Which) {
    Field_Which[Field_Which["SLOT"] = 0] = "SLOT";
    Field_Which[Field_Which["GROUP"] = 1] = "GROUP";
})(Field_Which = exports.Field_Which || (exports.Field_Which = {}));
var Field = /** @class */ (function (_super) {
    tslib_1.__extends(Field, _super);
    function Field() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Field.prototype.getName = function () { return index_1.Struct.getText(0, this); };
    Field.prototype.setName = function (value) { index_1.Struct.setText(0, value, this); };
    Field.prototype.getCodeOrder = function () { return index_1.Struct.getUint16(0, this); };
    Field.prototype.setCodeOrder = function (value) { index_1.Struct.setUint16(0, value, this); };
    Field.prototype.adoptAnnotations = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(1, this)); };
    Field.prototype.disownAnnotations = function () { return index_1.Struct.disown(this.getAnnotations()); };
    Field.prototype.getAnnotations = function () { return index_1.Struct.getList(1, Field._Annotations, this); };
    Field.prototype.hasAnnotations = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(1, this)); };
    Field.prototype.initAnnotations = function (length) { return index_1.Struct.initList(1, Field._Annotations, length, this); };
    Field.prototype.setAnnotations = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(1, this)); };
    Field.prototype.getDiscriminantValue = function () { return index_1.Struct.getUint16(2, this, Field._capnp.defaultDiscriminantValue); };
    Field.prototype.setDiscriminantValue = function (value) { index_1.Struct.setUint16(2, value, this); };
    Field.prototype.getSlot = function () {
        index_1.Struct.testWhich("slot", index_1.Struct.getUint16(8, this), 0, this);
        return index_1.Struct.getAs(Field_Slot, this);
    };
    Field.prototype.initSlot = function () {
        index_1.Struct.setUint16(8, 0, this);
        return index_1.Struct.getAs(Field_Slot, this);
    };
    Field.prototype.isSlot = function () { return index_1.Struct.getUint16(8, this) === 0; };
    Field.prototype.setSlot = function () { index_1.Struct.setUint16(8, 0, this); };
    Field.prototype.getGroup = function () {
        index_1.Struct.testWhich("group", index_1.Struct.getUint16(8, this), 1, this);
        return index_1.Struct.getAs(Field_Group, this);
    };
    Field.prototype.initGroup = function () {
        index_1.Struct.setUint16(8, 1, this);
        return index_1.Struct.getAs(Field_Group, this);
    };
    Field.prototype.isGroup = function () { return index_1.Struct.getUint16(8, this) === 1; };
    Field.prototype.setGroup = function () { index_1.Struct.setUint16(8, 1, this); };
    Field.prototype.getOrdinal = function () { return index_1.Struct.getAs(Field_Ordinal, this); };
    Field.prototype.initOrdinal = function () { return index_1.Struct.getAs(Field_Ordinal, this); };
    Field.prototype.toString = function () { return "Field_" + _super.prototype.toString.call(this); };
    Field.prototype.which = function () { return index_1.Struct.getUint16(8, this); };
    Field.NO_DISCRIMINANT = 65535;
    Field.SLOT = Field_Which.SLOT;
    Field.GROUP = Field_Which.GROUP;
    Field._capnp = { displayName: "Field", id: "9aad50a41f4af45f", size: new index_1.ObjectSize(24, 4), defaultDiscriminantValue: capnp.getUint16Mask(65535) };
    return Field;
}(index_1.Struct));
exports.Field = Field;
var Enumerant = /** @class */ (function (_super) {
    tslib_1.__extends(Enumerant, _super);
    function Enumerant() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Enumerant.prototype.getName = function () { return index_1.Struct.getText(0, this); };
    Enumerant.prototype.setName = function (value) { index_1.Struct.setText(0, value, this); };
    Enumerant.prototype.getCodeOrder = function () { return index_1.Struct.getUint16(0, this); };
    Enumerant.prototype.setCodeOrder = function (value) { index_1.Struct.setUint16(0, value, this); };
    Enumerant.prototype.adoptAnnotations = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(1, this)); };
    Enumerant.prototype.disownAnnotations = function () { return index_1.Struct.disown(this.getAnnotations()); };
    Enumerant.prototype.getAnnotations = function () { return index_1.Struct.getList(1, Enumerant._Annotations, this); };
    Enumerant.prototype.hasAnnotations = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(1, this)); };
    Enumerant.prototype.initAnnotations = function (length) { return index_1.Struct.initList(1, Enumerant._Annotations, length, this); };
    Enumerant.prototype.setAnnotations = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(1, this)); };
    Enumerant.prototype.toString = function () { return "Enumerant_" + _super.prototype.toString.call(this); };
    Enumerant._capnp = { displayName: "Enumerant", id: "978a7cebdc549a4d", size: new index_1.ObjectSize(8, 2) };
    return Enumerant;
}(index_1.Struct));
exports.Enumerant = Enumerant;
var Superclass = /** @class */ (function (_super) {
    tslib_1.__extends(Superclass, _super);
    function Superclass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Superclass.prototype.getId = function () { return index_1.Struct.getUint64(0, this); };
    Superclass.prototype.setId = function (value) { index_1.Struct.setUint64(0, value, this); };
    Superclass.prototype.adoptBrand = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this)); };
    Superclass.prototype.disownBrand = function () { return index_1.Struct.disown(this.getBrand()); };
    Superclass.prototype.getBrand = function () { return index_1.Struct.getStruct(0, Brand, this); };
    Superclass.prototype.hasBrand = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Superclass.prototype.initBrand = function () { return index_1.Struct.initStructAt(0, Brand, this); };
    Superclass.prototype.setBrand = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this)); };
    Superclass.prototype.toString = function () { return "Superclass_" + _super.prototype.toString.call(this); };
    Superclass._capnp = { displayName: "Superclass", id: "a9962a9ed0a4d7f8", size: new index_1.ObjectSize(8, 1) };
    return Superclass;
}(index_1.Struct));
exports.Superclass = Superclass;
var Method = /** @class */ (function (_super) {
    tslib_1.__extends(Method, _super);
    function Method() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Method.prototype.getName = function () { return index_1.Struct.getText(0, this); };
    Method.prototype.setName = function (value) { index_1.Struct.setText(0, value, this); };
    Method.prototype.getCodeOrder = function () { return index_1.Struct.getUint16(0, this); };
    Method.prototype.setCodeOrder = function (value) { index_1.Struct.setUint16(0, value, this); };
    Method.prototype.adoptImplicitParameters = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(4, this)); };
    Method.prototype.disownImplicitParameters = function () { return index_1.Struct.disown(this.getImplicitParameters()); };
    Method.prototype.getImplicitParameters = function () { return index_1.Struct.getList(4, Method._ImplicitParameters, this); };
    Method.prototype.hasImplicitParameters = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(4, this)); };
    Method.prototype.initImplicitParameters = function (length) { return index_1.Struct.initList(4, Method._ImplicitParameters, length, this); };
    Method.prototype.setImplicitParameters = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(4, this)); };
    Method.prototype.getParamStructType = function () { return index_1.Struct.getUint64(8, this); };
    Method.prototype.setParamStructType = function (value) { index_1.Struct.setUint64(8, value, this); };
    Method.prototype.adoptParamBrand = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(2, this)); };
    Method.prototype.disownParamBrand = function () { return index_1.Struct.disown(this.getParamBrand()); };
    Method.prototype.getParamBrand = function () { return index_1.Struct.getStruct(2, Brand, this); };
    Method.prototype.hasParamBrand = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(2, this)); };
    Method.prototype.initParamBrand = function () { return index_1.Struct.initStructAt(2, Brand, this); };
    Method.prototype.setParamBrand = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(2, this)); };
    Method.prototype.getResultStructType = function () { return index_1.Struct.getUint64(16, this); };
    Method.prototype.setResultStructType = function (value) { index_1.Struct.setUint64(16, value, this); };
    Method.prototype.adoptResultBrand = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(3, this)); };
    Method.prototype.disownResultBrand = function () { return index_1.Struct.disown(this.getResultBrand()); };
    Method.prototype.getResultBrand = function () { return index_1.Struct.getStruct(3, Brand, this); };
    Method.prototype.hasResultBrand = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(3, this)); };
    Method.prototype.initResultBrand = function () { return index_1.Struct.initStructAt(3, Brand, this); };
    Method.prototype.setResultBrand = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(3, this)); };
    Method.prototype.adoptAnnotations = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(1, this)); };
    Method.prototype.disownAnnotations = function () { return index_1.Struct.disown(this.getAnnotations()); };
    Method.prototype.getAnnotations = function () { return index_1.Struct.getList(1, Method._Annotations, this); };
    Method.prototype.hasAnnotations = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(1, this)); };
    Method.prototype.initAnnotations = function (length) { return index_1.Struct.initList(1, Method._Annotations, length, this); };
    Method.prototype.setAnnotations = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(1, this)); };
    Method.prototype.toString = function () { return "Method_" + _super.prototype.toString.call(this); };
    Method._capnp = { displayName: "Method", id: "9500cce23b334d80", size: new index_1.ObjectSize(24, 5) };
    return Method;
}(index_1.Struct));
exports.Method = Method;
var Type_List = /** @class */ (function (_super) {
    tslib_1.__extends(Type_List, _super);
    function Type_List() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Type_List.prototype.adoptElementType = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this)); };
    Type_List.prototype.disownElementType = function () { return index_1.Struct.disown(this.getElementType()); };
    Type_List.prototype.getElementType = function () { return index_1.Struct.getStruct(0, Type, this); };
    Type_List.prototype.hasElementType = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Type_List.prototype.initElementType = function () { return index_1.Struct.initStructAt(0, Type, this); };
    Type_List.prototype.setElementType = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this)); };
    Type_List.prototype.toString = function () { return "Type_List_" + _super.prototype.toString.call(this); };
    Type_List._capnp = { displayName: "list", id: "87e739250a60ea97", size: new index_1.ObjectSize(24, 1) };
    return Type_List;
}(index_1.Struct));
exports.Type_List = Type_List;
var Type_Enum = /** @class */ (function (_super) {
    tslib_1.__extends(Type_Enum, _super);
    function Type_Enum() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Type_Enum.prototype.getTypeId = function () { return index_1.Struct.getUint64(8, this); };
    Type_Enum.prototype.setTypeId = function (value) { index_1.Struct.setUint64(8, value, this); };
    Type_Enum.prototype.adoptBrand = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this)); };
    Type_Enum.prototype.disownBrand = function () { return index_1.Struct.disown(this.getBrand()); };
    Type_Enum.prototype.getBrand = function () { return index_1.Struct.getStruct(0, Brand, this); };
    Type_Enum.prototype.hasBrand = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Type_Enum.prototype.initBrand = function () { return index_1.Struct.initStructAt(0, Brand, this); };
    Type_Enum.prototype.setBrand = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this)); };
    Type_Enum.prototype.toString = function () { return "Type_Enum_" + _super.prototype.toString.call(this); };
    Type_Enum._capnp = { displayName: "enum", id: "9e0e78711a7f87a9", size: new index_1.ObjectSize(24, 1) };
    return Type_Enum;
}(index_1.Struct));
exports.Type_Enum = Type_Enum;
var Type_Struct = /** @class */ (function (_super) {
    tslib_1.__extends(Type_Struct, _super);
    function Type_Struct() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Type_Struct.prototype.getTypeId = function () { return index_1.Struct.getUint64(8, this); };
    Type_Struct.prototype.setTypeId = function (value) { index_1.Struct.setUint64(8, value, this); };
    Type_Struct.prototype.adoptBrand = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this)); };
    Type_Struct.prototype.disownBrand = function () { return index_1.Struct.disown(this.getBrand()); };
    Type_Struct.prototype.getBrand = function () { return index_1.Struct.getStruct(0, Brand, this); };
    Type_Struct.prototype.hasBrand = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Type_Struct.prototype.initBrand = function () { return index_1.Struct.initStructAt(0, Brand, this); };
    Type_Struct.prototype.setBrand = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this)); };
    Type_Struct.prototype.toString = function () { return "Type_Struct_" + _super.prototype.toString.call(this); };
    Type_Struct._capnp = { displayName: "struct", id: "ac3a6f60ef4cc6d3", size: new index_1.ObjectSize(24, 1) };
    return Type_Struct;
}(index_1.Struct));
exports.Type_Struct = Type_Struct;
var Type_Interface = /** @class */ (function (_super) {
    tslib_1.__extends(Type_Interface, _super);
    function Type_Interface() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Type_Interface.prototype.getTypeId = function () { return index_1.Struct.getUint64(8, this); };
    Type_Interface.prototype.setTypeId = function (value) { index_1.Struct.setUint64(8, value, this); };
    Type_Interface.prototype.adoptBrand = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this)); };
    Type_Interface.prototype.disownBrand = function () { return index_1.Struct.disown(this.getBrand()); };
    Type_Interface.prototype.getBrand = function () { return index_1.Struct.getStruct(0, Brand, this); };
    Type_Interface.prototype.hasBrand = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Type_Interface.prototype.initBrand = function () { return index_1.Struct.initStructAt(0, Brand, this); };
    Type_Interface.prototype.setBrand = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this)); };
    Type_Interface.prototype.toString = function () { return "Type_Interface_" + _super.prototype.toString.call(this); };
    Type_Interface._capnp = { displayName: "interface", id: "ed8bca69f7fb0cbf", size: new index_1.ObjectSize(24, 1) };
    return Type_Interface;
}(index_1.Struct));
exports.Type_Interface = Type_Interface;
var Type_AnyPointer_Unconstrained_Which;
(function (Type_AnyPointer_Unconstrained_Which) {
    Type_AnyPointer_Unconstrained_Which[Type_AnyPointer_Unconstrained_Which["ANY_KIND"] = 0] = "ANY_KIND";
    Type_AnyPointer_Unconstrained_Which[Type_AnyPointer_Unconstrained_Which["STRUCT"] = 1] = "STRUCT";
    Type_AnyPointer_Unconstrained_Which[Type_AnyPointer_Unconstrained_Which["LIST"] = 2] = "LIST";
    Type_AnyPointer_Unconstrained_Which[Type_AnyPointer_Unconstrained_Which["CAPABILITY"] = 3] = "CAPABILITY";
})(Type_AnyPointer_Unconstrained_Which = exports.Type_AnyPointer_Unconstrained_Which || (exports.Type_AnyPointer_Unconstrained_Which = {}));
var Type_AnyPointer_Unconstrained = /** @class */ (function (_super) {
    tslib_1.__extends(Type_AnyPointer_Unconstrained, _super);
    function Type_AnyPointer_Unconstrained() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Type_AnyPointer_Unconstrained.prototype.isAnyKind = function () { return index_1.Struct.getUint16(10, this) === 0; };
    Type_AnyPointer_Unconstrained.prototype.setAnyKind = function () { index_1.Struct.setUint16(10, 0, this); };
    Type_AnyPointer_Unconstrained.prototype.isStruct = function () { return index_1.Struct.getUint16(10, this) === 1; };
    Type_AnyPointer_Unconstrained.prototype.setStruct = function () { index_1.Struct.setUint16(10, 1, this); };
    Type_AnyPointer_Unconstrained.prototype.isList = function () { return index_1.Struct.getUint16(10, this) === 2; };
    Type_AnyPointer_Unconstrained.prototype.setList = function () { index_1.Struct.setUint16(10, 2, this); };
    Type_AnyPointer_Unconstrained.prototype.isCapability = function () { return index_1.Struct.getUint16(10, this) === 3; };
    Type_AnyPointer_Unconstrained.prototype.setCapability = function () { index_1.Struct.setUint16(10, 3, this); };
    Type_AnyPointer_Unconstrained.prototype.toString = function () { return "Type_AnyPointer_Unconstrained_" + _super.prototype.toString.call(this); };
    Type_AnyPointer_Unconstrained.prototype.which = function () { return index_1.Struct.getUint16(10, this); };
    Type_AnyPointer_Unconstrained.ANY_KIND = Type_AnyPointer_Unconstrained_Which.ANY_KIND;
    Type_AnyPointer_Unconstrained.STRUCT = Type_AnyPointer_Unconstrained_Which.STRUCT;
    Type_AnyPointer_Unconstrained.LIST = Type_AnyPointer_Unconstrained_Which.LIST;
    Type_AnyPointer_Unconstrained.CAPABILITY = Type_AnyPointer_Unconstrained_Which.CAPABILITY;
    Type_AnyPointer_Unconstrained._capnp = { displayName: "unconstrained", id: "8e3b5f79fe593656", size: new index_1.ObjectSize(24, 1) };
    return Type_AnyPointer_Unconstrained;
}(index_1.Struct));
exports.Type_AnyPointer_Unconstrained = Type_AnyPointer_Unconstrained;
var Type_AnyPointer_Parameter = /** @class */ (function (_super) {
    tslib_1.__extends(Type_AnyPointer_Parameter, _super);
    function Type_AnyPointer_Parameter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Type_AnyPointer_Parameter.prototype.getScopeId = function () { return index_1.Struct.getUint64(16, this); };
    Type_AnyPointer_Parameter.prototype.setScopeId = function (value) { index_1.Struct.setUint64(16, value, this); };
    Type_AnyPointer_Parameter.prototype.getParameterIndex = function () { return index_1.Struct.getUint16(10, this); };
    Type_AnyPointer_Parameter.prototype.setParameterIndex = function (value) { index_1.Struct.setUint16(10, value, this); };
    Type_AnyPointer_Parameter.prototype.toString = function () { return "Type_AnyPointer_Parameter_" + _super.prototype.toString.call(this); };
    Type_AnyPointer_Parameter._capnp = { displayName: "parameter", id: "9dd1f724f4614a85", size: new index_1.ObjectSize(24, 1) };
    return Type_AnyPointer_Parameter;
}(index_1.Struct));
exports.Type_AnyPointer_Parameter = Type_AnyPointer_Parameter;
var Type_AnyPointer_ImplicitMethodParameter = /** @class */ (function (_super) {
    tslib_1.__extends(Type_AnyPointer_ImplicitMethodParameter, _super);
    function Type_AnyPointer_ImplicitMethodParameter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Type_AnyPointer_ImplicitMethodParameter.prototype.getParameterIndex = function () { return index_1.Struct.getUint16(10, this); };
    Type_AnyPointer_ImplicitMethodParameter.prototype.setParameterIndex = function (value) { index_1.Struct.setUint16(10, value, this); };
    Type_AnyPointer_ImplicitMethodParameter.prototype.toString = function () { return "Type_AnyPointer_ImplicitMethodParameter_" + _super.prototype.toString.call(this); };
    Type_AnyPointer_ImplicitMethodParameter._capnp = { displayName: "implicitMethodParameter", id: "baefc9120c56e274", size: new index_1.ObjectSize(24, 1) };
    return Type_AnyPointer_ImplicitMethodParameter;
}(index_1.Struct));
exports.Type_AnyPointer_ImplicitMethodParameter = Type_AnyPointer_ImplicitMethodParameter;
var Type_AnyPointer_Which;
(function (Type_AnyPointer_Which) {
    Type_AnyPointer_Which[Type_AnyPointer_Which["UNCONSTRAINED"] = 0] = "UNCONSTRAINED";
    Type_AnyPointer_Which[Type_AnyPointer_Which["PARAMETER"] = 1] = "PARAMETER";
    Type_AnyPointer_Which[Type_AnyPointer_Which["IMPLICIT_METHOD_PARAMETER"] = 2] = "IMPLICIT_METHOD_PARAMETER";
})(Type_AnyPointer_Which = exports.Type_AnyPointer_Which || (exports.Type_AnyPointer_Which = {}));
var Type_AnyPointer = /** @class */ (function (_super) {
    tslib_1.__extends(Type_AnyPointer, _super);
    function Type_AnyPointer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Type_AnyPointer.prototype.getUnconstrained = function () {
        index_1.Struct.testWhich("unconstrained", index_1.Struct.getUint16(8, this), 0, this);
        return index_1.Struct.getAs(Type_AnyPointer_Unconstrained, this);
    };
    Type_AnyPointer.prototype.initUnconstrained = function () {
        index_1.Struct.setUint16(8, 0, this);
        return index_1.Struct.getAs(Type_AnyPointer_Unconstrained, this);
    };
    Type_AnyPointer.prototype.isUnconstrained = function () { return index_1.Struct.getUint16(8, this) === 0; };
    Type_AnyPointer.prototype.setUnconstrained = function () { index_1.Struct.setUint16(8, 0, this); };
    Type_AnyPointer.prototype.getParameter = function () {
        index_1.Struct.testWhich("parameter", index_1.Struct.getUint16(8, this), 1, this);
        return index_1.Struct.getAs(Type_AnyPointer_Parameter, this);
    };
    Type_AnyPointer.prototype.initParameter = function () {
        index_1.Struct.setUint16(8, 1, this);
        return index_1.Struct.getAs(Type_AnyPointer_Parameter, this);
    };
    Type_AnyPointer.prototype.isParameter = function () { return index_1.Struct.getUint16(8, this) === 1; };
    Type_AnyPointer.prototype.setParameter = function () { index_1.Struct.setUint16(8, 1, this); };
    Type_AnyPointer.prototype.getImplicitMethodParameter = function () {
        index_1.Struct.testWhich("implicitMethodParameter", index_1.Struct.getUint16(8, this), 2, this);
        return index_1.Struct.getAs(Type_AnyPointer_ImplicitMethodParameter, this);
    };
    Type_AnyPointer.prototype.initImplicitMethodParameter = function () {
        index_1.Struct.setUint16(8, 2, this);
        return index_1.Struct.getAs(Type_AnyPointer_ImplicitMethodParameter, this);
    };
    Type_AnyPointer.prototype.isImplicitMethodParameter = function () { return index_1.Struct.getUint16(8, this) === 2; };
    Type_AnyPointer.prototype.setImplicitMethodParameter = function () { index_1.Struct.setUint16(8, 2, this); };
    Type_AnyPointer.prototype.toString = function () { return "Type_AnyPointer_" + _super.prototype.toString.call(this); };
    Type_AnyPointer.prototype.which = function () { return index_1.Struct.getUint16(8, this); };
    Type_AnyPointer.UNCONSTRAINED = Type_AnyPointer_Which.UNCONSTRAINED;
    Type_AnyPointer.PARAMETER = Type_AnyPointer_Which.PARAMETER;
    Type_AnyPointer.IMPLICIT_METHOD_PARAMETER = Type_AnyPointer_Which.IMPLICIT_METHOD_PARAMETER;
    Type_AnyPointer._capnp = { displayName: "anyPointer", id: "c2573fe8a23e49f1", size: new index_1.ObjectSize(24, 1) };
    return Type_AnyPointer;
}(index_1.Struct));
exports.Type_AnyPointer = Type_AnyPointer;
var Type_Which;
(function (Type_Which) {
    Type_Which[Type_Which["VOID"] = 0] = "VOID";
    Type_Which[Type_Which["BOOL"] = 1] = "BOOL";
    Type_Which[Type_Which["INT8"] = 2] = "INT8";
    Type_Which[Type_Which["INT16"] = 3] = "INT16";
    Type_Which[Type_Which["INT32"] = 4] = "INT32";
    Type_Which[Type_Which["INT64"] = 5] = "INT64";
    Type_Which[Type_Which["UINT8"] = 6] = "UINT8";
    Type_Which[Type_Which["UINT16"] = 7] = "UINT16";
    Type_Which[Type_Which["UINT32"] = 8] = "UINT32";
    Type_Which[Type_Which["UINT64"] = 9] = "UINT64";
    Type_Which[Type_Which["FLOAT32"] = 10] = "FLOAT32";
    Type_Which[Type_Which["FLOAT64"] = 11] = "FLOAT64";
    Type_Which[Type_Which["TEXT"] = 12] = "TEXT";
    Type_Which[Type_Which["DATA"] = 13] = "DATA";
    Type_Which[Type_Which["LIST"] = 14] = "LIST";
    Type_Which[Type_Which["ENUM"] = 15] = "ENUM";
    Type_Which[Type_Which["STRUCT"] = 16] = "STRUCT";
    Type_Which[Type_Which["INTERFACE"] = 17] = "INTERFACE";
    Type_Which[Type_Which["ANY_POINTER"] = 18] = "ANY_POINTER";
})(Type_Which = exports.Type_Which || (exports.Type_Which = {}));
var Type = /** @class */ (function (_super) {
    tslib_1.__extends(Type, _super);
    function Type() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Type.prototype.isVoid = function () { return index_1.Struct.getUint16(0, this) === 0; };
    Type.prototype.setVoid = function () { index_1.Struct.setUint16(0, 0, this); };
    Type.prototype.isBool = function () { return index_1.Struct.getUint16(0, this) === 1; };
    Type.prototype.setBool = function () { index_1.Struct.setUint16(0, 1, this); };
    Type.prototype.isInt8 = function () { return index_1.Struct.getUint16(0, this) === 2; };
    Type.prototype.setInt8 = function () { index_1.Struct.setUint16(0, 2, this); };
    Type.prototype.isInt16 = function () { return index_1.Struct.getUint16(0, this) === 3; };
    Type.prototype.setInt16 = function () { index_1.Struct.setUint16(0, 3, this); };
    Type.prototype.isInt32 = function () { return index_1.Struct.getUint16(0, this) === 4; };
    Type.prototype.setInt32 = function () { index_1.Struct.setUint16(0, 4, this); };
    Type.prototype.isInt64 = function () { return index_1.Struct.getUint16(0, this) === 5; };
    Type.prototype.setInt64 = function () { index_1.Struct.setUint16(0, 5, this); };
    Type.prototype.isUint8 = function () { return index_1.Struct.getUint16(0, this) === 6; };
    Type.prototype.setUint8 = function () { index_1.Struct.setUint16(0, 6, this); };
    Type.prototype.isUint16 = function () { return index_1.Struct.getUint16(0, this) === 7; };
    Type.prototype.setUint16 = function () { index_1.Struct.setUint16(0, 7, this); };
    Type.prototype.isUint32 = function () { return index_1.Struct.getUint16(0, this) === 8; };
    Type.prototype.setUint32 = function () { index_1.Struct.setUint16(0, 8, this); };
    Type.prototype.isUint64 = function () { return index_1.Struct.getUint16(0, this) === 9; };
    Type.prototype.setUint64 = function () { index_1.Struct.setUint16(0, 9, this); };
    Type.prototype.isFloat32 = function () { return index_1.Struct.getUint16(0, this) === 10; };
    Type.prototype.setFloat32 = function () { index_1.Struct.setUint16(0, 10, this); };
    Type.prototype.isFloat64 = function () { return index_1.Struct.getUint16(0, this) === 11; };
    Type.prototype.setFloat64 = function () { index_1.Struct.setUint16(0, 11, this); };
    Type.prototype.isText = function () { return index_1.Struct.getUint16(0, this) === 12; };
    Type.prototype.setText = function () { index_1.Struct.setUint16(0, 12, this); };
    Type.prototype.isData = function () { return index_1.Struct.getUint16(0, this) === 13; };
    Type.prototype.setData = function () { index_1.Struct.setUint16(0, 13, this); };
    Type.prototype.getList = function () {
        index_1.Struct.testWhich("list", index_1.Struct.getUint16(0, this), 14, this);
        return index_1.Struct.getAs(Type_List, this);
    };
    Type.prototype.initList = function () {
        index_1.Struct.setUint16(0, 14, this);
        return index_1.Struct.getAs(Type_List, this);
    };
    Type.prototype.isList = function () { return index_1.Struct.getUint16(0, this) === 14; };
    Type.prototype.setList = function () { index_1.Struct.setUint16(0, 14, this); };
    Type.prototype.getEnum = function () {
        index_1.Struct.testWhich("enum", index_1.Struct.getUint16(0, this), 15, this);
        return index_1.Struct.getAs(Type_Enum, this);
    };
    Type.prototype.initEnum = function () {
        index_1.Struct.setUint16(0, 15, this);
        return index_1.Struct.getAs(Type_Enum, this);
    };
    Type.prototype.isEnum = function () { return index_1.Struct.getUint16(0, this) === 15; };
    Type.prototype.setEnum = function () { index_1.Struct.setUint16(0, 15, this); };
    Type.prototype.getStruct = function () {
        index_1.Struct.testWhich("struct", index_1.Struct.getUint16(0, this), 16, this);
        return index_1.Struct.getAs(Type_Struct, this);
    };
    Type.prototype.initStruct = function () {
        index_1.Struct.setUint16(0, 16, this);
        return index_1.Struct.getAs(Type_Struct, this);
    };
    Type.prototype.isStruct = function () { return index_1.Struct.getUint16(0, this) === 16; };
    Type.prototype.setStruct = function () { index_1.Struct.setUint16(0, 16, this); };
    Type.prototype.getInterface = function () {
        index_1.Struct.testWhich("interface", index_1.Struct.getUint16(0, this), 17, this);
        return index_1.Struct.getAs(Type_Interface, this);
    };
    Type.prototype.initInterface = function () {
        index_1.Struct.setUint16(0, 17, this);
        return index_1.Struct.getAs(Type_Interface, this);
    };
    Type.prototype.isInterface = function () { return index_1.Struct.getUint16(0, this) === 17; };
    Type.prototype.setInterface = function () { index_1.Struct.setUint16(0, 17, this); };
    Type.prototype.getAnyPointer = function () {
        index_1.Struct.testWhich("anyPointer", index_1.Struct.getUint16(0, this), 18, this);
        return index_1.Struct.getAs(Type_AnyPointer, this);
    };
    Type.prototype.initAnyPointer = function () {
        index_1.Struct.setUint16(0, 18, this);
        return index_1.Struct.getAs(Type_AnyPointer, this);
    };
    Type.prototype.isAnyPointer = function () { return index_1.Struct.getUint16(0, this) === 18; };
    Type.prototype.setAnyPointer = function () { index_1.Struct.setUint16(0, 18, this); };
    Type.prototype.toString = function () { return "Type_" + _super.prototype.toString.call(this); };
    Type.prototype.which = function () { return index_1.Struct.getUint16(0, this); };
    Type.VOID = Type_Which.VOID;
    Type.BOOL = Type_Which.BOOL;
    Type.INT8 = Type_Which.INT8;
    Type.INT16 = Type_Which.INT16;
    Type.INT32 = Type_Which.INT32;
    Type.INT64 = Type_Which.INT64;
    Type.UINT8 = Type_Which.UINT8;
    Type.UINT16 = Type_Which.UINT16;
    Type.UINT32 = Type_Which.UINT32;
    Type.UINT64 = Type_Which.UINT64;
    Type.FLOAT32 = Type_Which.FLOAT32;
    Type.FLOAT64 = Type_Which.FLOAT64;
    Type.TEXT = Type_Which.TEXT;
    Type.DATA = Type_Which.DATA;
    Type.LIST = Type_Which.LIST;
    Type.ENUM = Type_Which.ENUM;
    Type.STRUCT = Type_Which.STRUCT;
    Type.INTERFACE = Type_Which.INTERFACE;
    Type.ANY_POINTER = Type_Which.ANY_POINTER;
    Type._capnp = { displayName: "Type", id: "d07378ede1f9cc60", size: new index_1.ObjectSize(24, 1) };
    return Type;
}(index_1.Struct));
exports.Type = Type;
var Brand_Scope_Which;
(function (Brand_Scope_Which) {
    Brand_Scope_Which[Brand_Scope_Which["BIND"] = 0] = "BIND";
    Brand_Scope_Which[Brand_Scope_Which["INHERIT"] = 1] = "INHERIT";
})(Brand_Scope_Which = exports.Brand_Scope_Which || (exports.Brand_Scope_Which = {}));
var Brand_Scope = /** @class */ (function (_super) {
    tslib_1.__extends(Brand_Scope, _super);
    function Brand_Scope() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Brand_Scope.prototype.getScopeId = function () { return index_1.Struct.getUint64(0, this); };
    Brand_Scope.prototype.setScopeId = function (value) { index_1.Struct.setUint64(0, value, this); };
    Brand_Scope.prototype.adoptBind = function (value) {
        index_1.Struct.setUint16(8, 0, this);
        index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this));
    };
    Brand_Scope.prototype.disownBind = function () { return index_1.Struct.disown(this.getBind()); };
    Brand_Scope.prototype.getBind = function () {
        index_1.Struct.testWhich("bind", index_1.Struct.getUint16(8, this), 0, this);
        return index_1.Struct.getList(0, Brand_Scope._Bind, this);
    };
    Brand_Scope.prototype.hasBind = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Brand_Scope.prototype.initBind = function (length) {
        index_1.Struct.setUint16(8, 0, this);
        return index_1.Struct.initList(0, Brand_Scope._Bind, length, this);
    };
    Brand_Scope.prototype.isBind = function () { return index_1.Struct.getUint16(8, this) === 0; };
    Brand_Scope.prototype.setBind = function (value) {
        index_1.Struct.setUint16(8, 0, this);
        index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this));
    };
    Brand_Scope.prototype.isInherit = function () { return index_1.Struct.getUint16(8, this) === 1; };
    Brand_Scope.prototype.setInherit = function () { index_1.Struct.setUint16(8, 1, this); };
    Brand_Scope.prototype.toString = function () { return "Brand_Scope_" + _super.prototype.toString.call(this); };
    Brand_Scope.prototype.which = function () { return index_1.Struct.getUint16(8, this); };
    Brand_Scope.BIND = Brand_Scope_Which.BIND;
    Brand_Scope.INHERIT = Brand_Scope_Which.INHERIT;
    Brand_Scope._capnp = { displayName: "Scope", id: "abd73485a9636bc9", size: new index_1.ObjectSize(16, 1) };
    return Brand_Scope;
}(index_1.Struct));
exports.Brand_Scope = Brand_Scope;
var Brand_Binding_Which;
(function (Brand_Binding_Which) {
    Brand_Binding_Which[Brand_Binding_Which["UNBOUND"] = 0] = "UNBOUND";
    Brand_Binding_Which[Brand_Binding_Which["TYPE"] = 1] = "TYPE";
})(Brand_Binding_Which = exports.Brand_Binding_Which || (exports.Brand_Binding_Which = {}));
var Brand_Binding = /** @class */ (function (_super) {
    tslib_1.__extends(Brand_Binding, _super);
    function Brand_Binding() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Brand_Binding.prototype.isUnbound = function () { return index_1.Struct.getUint16(0, this) === 0; };
    Brand_Binding.prototype.setUnbound = function () { index_1.Struct.setUint16(0, 0, this); };
    Brand_Binding.prototype.adoptType = function (value) {
        index_1.Struct.setUint16(0, 1, this);
        index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this));
    };
    Brand_Binding.prototype.disownType = function () { return index_1.Struct.disown(this.getType()); };
    Brand_Binding.prototype.getType = function () {
        index_1.Struct.testWhich("type", index_1.Struct.getUint16(0, this), 1, this);
        return index_1.Struct.getStruct(0, Type, this);
    };
    Brand_Binding.prototype.hasType = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Brand_Binding.prototype.initType = function () {
        index_1.Struct.setUint16(0, 1, this);
        return index_1.Struct.initStructAt(0, Type, this);
    };
    Brand_Binding.prototype.isType = function () { return index_1.Struct.getUint16(0, this) === 1; };
    Brand_Binding.prototype.setType = function (value) {
        index_1.Struct.setUint16(0, 1, this);
        index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this));
    };
    Brand_Binding.prototype.toString = function () { return "Brand_Binding_" + _super.prototype.toString.call(this); };
    Brand_Binding.prototype.which = function () { return index_1.Struct.getUint16(0, this); };
    Brand_Binding.UNBOUND = Brand_Binding_Which.UNBOUND;
    Brand_Binding.TYPE = Brand_Binding_Which.TYPE;
    Brand_Binding._capnp = { displayName: "Binding", id: "c863cd16969ee7fc", size: new index_1.ObjectSize(8, 1) };
    return Brand_Binding;
}(index_1.Struct));
exports.Brand_Binding = Brand_Binding;
var Brand = /** @class */ (function (_super) {
    tslib_1.__extends(Brand, _super);
    function Brand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Brand.prototype.adoptScopes = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this)); };
    Brand.prototype.disownScopes = function () { return index_1.Struct.disown(this.getScopes()); };
    Brand.prototype.getScopes = function () { return index_1.Struct.getList(0, Brand._Scopes, this); };
    Brand.prototype.hasScopes = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Brand.prototype.initScopes = function (length) { return index_1.Struct.initList(0, Brand._Scopes, length, this); };
    Brand.prototype.setScopes = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this)); };
    Brand.prototype.toString = function () { return "Brand_" + _super.prototype.toString.call(this); };
    Brand.Scope = Brand_Scope;
    Brand.Binding = Brand_Binding;
    Brand._capnp = { displayName: "Brand", id: "903455f06065422b", size: new index_1.ObjectSize(0, 1) };
    return Brand;
}(index_1.Struct));
exports.Brand = Brand;
var Value_Which;
(function (Value_Which) {
    Value_Which[Value_Which["VOID"] = 0] = "VOID";
    Value_Which[Value_Which["BOOL"] = 1] = "BOOL";
    Value_Which[Value_Which["INT8"] = 2] = "INT8";
    Value_Which[Value_Which["INT16"] = 3] = "INT16";
    Value_Which[Value_Which["INT32"] = 4] = "INT32";
    Value_Which[Value_Which["INT64"] = 5] = "INT64";
    Value_Which[Value_Which["UINT8"] = 6] = "UINT8";
    Value_Which[Value_Which["UINT16"] = 7] = "UINT16";
    Value_Which[Value_Which["UINT32"] = 8] = "UINT32";
    Value_Which[Value_Which["UINT64"] = 9] = "UINT64";
    Value_Which[Value_Which["FLOAT32"] = 10] = "FLOAT32";
    Value_Which[Value_Which["FLOAT64"] = 11] = "FLOAT64";
    Value_Which[Value_Which["TEXT"] = 12] = "TEXT";
    Value_Which[Value_Which["DATA"] = 13] = "DATA";
    Value_Which[Value_Which["LIST"] = 14] = "LIST";
    Value_Which[Value_Which["ENUM"] = 15] = "ENUM";
    Value_Which[Value_Which["STRUCT"] = 16] = "STRUCT";
    Value_Which[Value_Which["INTERFACE"] = 17] = "INTERFACE";
    Value_Which[Value_Which["ANY_POINTER"] = 18] = "ANY_POINTER";
})(Value_Which = exports.Value_Which || (exports.Value_Which = {}));
var Value = /** @class */ (function (_super) {
    tslib_1.__extends(Value, _super);
    function Value() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Value.prototype.isVoid = function () { return index_1.Struct.getUint16(0, this) === 0; };
    Value.prototype.setVoid = function () { index_1.Struct.setUint16(0, 0, this); };
    Value.prototype.getBool = function () {
        index_1.Struct.testWhich("bool", index_1.Struct.getUint16(0, this), 1, this);
        return index_1.Struct.getBit(16, this);
    };
    Value.prototype.isBool = function () { return index_1.Struct.getUint16(0, this) === 1; };
    Value.prototype.setBool = function (value) {
        index_1.Struct.setUint16(0, 1, this);
        index_1.Struct.setBit(16, value, this);
    };
    Value.prototype.getInt8 = function () {
        index_1.Struct.testWhich("int8", index_1.Struct.getUint16(0, this), 2, this);
        return index_1.Struct.getInt8(2, this);
    };
    Value.prototype.isInt8 = function () { return index_1.Struct.getUint16(0, this) === 2; };
    Value.prototype.setInt8 = function (value) {
        index_1.Struct.setUint16(0, 2, this);
        index_1.Struct.setInt8(2, value, this);
    };
    Value.prototype.getInt16 = function () {
        index_1.Struct.testWhich("int16", index_1.Struct.getUint16(0, this), 3, this);
        return index_1.Struct.getInt16(2, this);
    };
    Value.prototype.isInt16 = function () { return index_1.Struct.getUint16(0, this) === 3; };
    Value.prototype.setInt16 = function (value) {
        index_1.Struct.setUint16(0, 3, this);
        index_1.Struct.setInt16(2, value, this);
    };
    Value.prototype.getInt32 = function () {
        index_1.Struct.testWhich("int32", index_1.Struct.getUint16(0, this), 4, this);
        return index_1.Struct.getInt32(4, this);
    };
    Value.prototype.isInt32 = function () { return index_1.Struct.getUint16(0, this) === 4; };
    Value.prototype.setInt32 = function (value) {
        index_1.Struct.setUint16(0, 4, this);
        index_1.Struct.setInt32(4, value, this);
    };
    Value.prototype.getInt64 = function () {
        index_1.Struct.testWhich("int64", index_1.Struct.getUint16(0, this), 5, this);
        return index_1.Struct.getInt64(8, this);
    };
    Value.prototype.isInt64 = function () { return index_1.Struct.getUint16(0, this) === 5; };
    Value.prototype.setInt64 = function (value) {
        index_1.Struct.setUint16(0, 5, this);
        index_1.Struct.setInt64(8, value, this);
    };
    Value.prototype.getUint8 = function () {
        index_1.Struct.testWhich("uint8", index_1.Struct.getUint16(0, this), 6, this);
        return index_1.Struct.getUint8(2, this);
    };
    Value.prototype.isUint8 = function () { return index_1.Struct.getUint16(0, this) === 6; };
    Value.prototype.setUint8 = function (value) {
        index_1.Struct.setUint16(0, 6, this);
        index_1.Struct.setUint8(2, value, this);
    };
    Value.prototype.getUint16 = function () {
        index_1.Struct.testWhich("uint16", index_1.Struct.getUint16(0, this), 7, this);
        return index_1.Struct.getUint16(2, this);
    };
    Value.prototype.isUint16 = function () { return index_1.Struct.getUint16(0, this) === 7; };
    Value.prototype.setUint16 = function (value) {
        index_1.Struct.setUint16(0, 7, this);
        index_1.Struct.setUint16(2, value, this);
    };
    Value.prototype.getUint32 = function () {
        index_1.Struct.testWhich("uint32", index_1.Struct.getUint16(0, this), 8, this);
        return index_1.Struct.getUint32(4, this);
    };
    Value.prototype.isUint32 = function () { return index_1.Struct.getUint16(0, this) === 8; };
    Value.prototype.setUint32 = function (value) {
        index_1.Struct.setUint16(0, 8, this);
        index_1.Struct.setUint32(4, value, this);
    };
    Value.prototype.getUint64 = function () {
        index_1.Struct.testWhich("uint64", index_1.Struct.getUint16(0, this), 9, this);
        return index_1.Struct.getUint64(8, this);
    };
    Value.prototype.isUint64 = function () { return index_1.Struct.getUint16(0, this) === 9; };
    Value.prototype.setUint64 = function (value) {
        index_1.Struct.setUint16(0, 9, this);
        index_1.Struct.setUint64(8, value, this);
    };
    Value.prototype.getFloat32 = function () {
        index_1.Struct.testWhich("float32", index_1.Struct.getUint16(0, this), 10, this);
        return index_1.Struct.getFloat32(4, this);
    };
    Value.prototype.isFloat32 = function () { return index_1.Struct.getUint16(0, this) === 10; };
    Value.prototype.setFloat32 = function (value) {
        index_1.Struct.setUint16(0, 10, this);
        index_1.Struct.setFloat32(4, value, this);
    };
    Value.prototype.getFloat64 = function () {
        index_1.Struct.testWhich("float64", index_1.Struct.getUint16(0, this), 11, this);
        return index_1.Struct.getFloat64(8, this);
    };
    Value.prototype.isFloat64 = function () { return index_1.Struct.getUint16(0, this) === 11; };
    Value.prototype.setFloat64 = function (value) {
        index_1.Struct.setUint16(0, 11, this);
        index_1.Struct.setFloat64(8, value, this);
    };
    Value.prototype.getText = function () {
        index_1.Struct.testWhich("text", index_1.Struct.getUint16(0, this), 12, this);
        return index_1.Struct.getText(0, this);
    };
    Value.prototype.isText = function () { return index_1.Struct.getUint16(0, this) === 12; };
    Value.prototype.setText = function (value) {
        index_1.Struct.setUint16(0, 12, this);
        index_1.Struct.setText(0, value, this);
    };
    Value.prototype.adoptData = function (value) {
        index_1.Struct.setUint16(0, 13, this);
        index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this));
    };
    Value.prototype.disownData = function () { return index_1.Struct.disown(this.getData()); };
    Value.prototype.getData = function () {
        index_1.Struct.testWhich("data", index_1.Struct.getUint16(0, this), 13, this);
        return index_1.Struct.getData(0, this);
    };
    Value.prototype.hasData = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Value.prototype.initData = function (length) {
        index_1.Struct.setUint16(0, 13, this);
        return index_1.Struct.initData(0, length, this);
    };
    Value.prototype.isData = function () { return index_1.Struct.getUint16(0, this) === 13; };
    Value.prototype.setData = function (value) {
        index_1.Struct.setUint16(0, 13, this);
        index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this));
    };
    Value.prototype.adoptList = function (value) {
        index_1.Struct.setUint16(0, 14, this);
        index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this));
    };
    Value.prototype.disownList = function () { return index_1.Struct.disown(this.getList()); };
    Value.prototype.getList = function () {
        index_1.Struct.testWhich("list", index_1.Struct.getUint16(0, this), 14, this);
        return index_1.Struct.getPointer(0, this);
    };
    Value.prototype.hasList = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Value.prototype.isList = function () { return index_1.Struct.getUint16(0, this) === 14; };
    Value.prototype.setList = function (value) {
        index_1.Struct.setUint16(0, 14, this);
        index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this));
    };
    Value.prototype.getEnum = function () {
        index_1.Struct.testWhich("enum", index_1.Struct.getUint16(0, this), 15, this);
        return index_1.Struct.getUint16(2, this);
    };
    Value.prototype.isEnum = function () { return index_1.Struct.getUint16(0, this) === 15; };
    Value.prototype.setEnum = function (value) {
        index_1.Struct.setUint16(0, 15, this);
        index_1.Struct.setUint16(2, value, this);
    };
    Value.prototype.adoptStruct = function (value) {
        index_1.Struct.setUint16(0, 16, this);
        index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this));
    };
    Value.prototype.disownStruct = function () { return index_1.Struct.disown(this.getStruct()); };
    Value.prototype.getStruct = function () {
        index_1.Struct.testWhich("struct", index_1.Struct.getUint16(0, this), 16, this);
        return index_1.Struct.getPointer(0, this);
    };
    Value.prototype.hasStruct = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Value.prototype.isStruct = function () { return index_1.Struct.getUint16(0, this) === 16; };
    Value.prototype.setStruct = function (value) {
        index_1.Struct.setUint16(0, 16, this);
        index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this));
    };
    Value.prototype.isInterface = function () { return index_1.Struct.getUint16(0, this) === 17; };
    Value.prototype.setInterface = function () { index_1.Struct.setUint16(0, 17, this); };
    Value.prototype.adoptAnyPointer = function (value) {
        index_1.Struct.setUint16(0, 18, this);
        index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this));
    };
    Value.prototype.disownAnyPointer = function () { return index_1.Struct.disown(this.getAnyPointer()); };
    Value.prototype.getAnyPointer = function () {
        index_1.Struct.testWhich("anyPointer", index_1.Struct.getUint16(0, this), 18, this);
        return index_1.Struct.getPointer(0, this);
    };
    Value.prototype.hasAnyPointer = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Value.prototype.isAnyPointer = function () { return index_1.Struct.getUint16(0, this) === 18; };
    Value.prototype.setAnyPointer = function (value) {
        index_1.Struct.setUint16(0, 18, this);
        index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this));
    };
    Value.prototype.toString = function () { return "Value_" + _super.prototype.toString.call(this); };
    Value.prototype.which = function () { return index_1.Struct.getUint16(0, this); };
    Value.VOID = Value_Which.VOID;
    Value.BOOL = Value_Which.BOOL;
    Value.INT8 = Value_Which.INT8;
    Value.INT16 = Value_Which.INT16;
    Value.INT32 = Value_Which.INT32;
    Value.INT64 = Value_Which.INT64;
    Value.UINT8 = Value_Which.UINT8;
    Value.UINT16 = Value_Which.UINT16;
    Value.UINT32 = Value_Which.UINT32;
    Value.UINT64 = Value_Which.UINT64;
    Value.FLOAT32 = Value_Which.FLOAT32;
    Value.FLOAT64 = Value_Which.FLOAT64;
    Value.TEXT = Value_Which.TEXT;
    Value.DATA = Value_Which.DATA;
    Value.LIST = Value_Which.LIST;
    Value.ENUM = Value_Which.ENUM;
    Value.STRUCT = Value_Which.STRUCT;
    Value.INTERFACE = Value_Which.INTERFACE;
    Value.ANY_POINTER = Value_Which.ANY_POINTER;
    Value._capnp = { displayName: "Value", id: "ce23dcd2d7b00c9b", size: new index_1.ObjectSize(16, 1) };
    return Value;
}(index_1.Struct));
exports.Value = Value;
var Annotation = /** @class */ (function (_super) {
    tslib_1.__extends(Annotation, _super);
    function Annotation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Annotation.prototype.getId = function () { return index_1.Struct.getUint64(0, this); };
    Annotation.prototype.setId = function (value) { index_1.Struct.setUint64(0, value, this); };
    Annotation.prototype.adoptBrand = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(1, this)); };
    Annotation.prototype.disownBrand = function () { return index_1.Struct.disown(this.getBrand()); };
    Annotation.prototype.getBrand = function () { return index_1.Struct.getStruct(1, Brand, this); };
    Annotation.prototype.hasBrand = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(1, this)); };
    Annotation.prototype.initBrand = function () { return index_1.Struct.initStructAt(1, Brand, this); };
    Annotation.prototype.setBrand = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(1, this)); };
    Annotation.prototype.adoptValue = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this)); };
    Annotation.prototype.disownValue = function () { return index_1.Struct.disown(this.getValue()); };
    Annotation.prototype.getValue = function () { return index_1.Struct.getStruct(0, Value, this); };
    Annotation.prototype.hasValue = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    Annotation.prototype.initValue = function () { return index_1.Struct.initStructAt(0, Value, this); };
    Annotation.prototype.setValue = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this)); };
    Annotation.prototype.toString = function () { return "Annotation_" + _super.prototype.toString.call(this); };
    Annotation._capnp = { displayName: "Annotation", id: "f1c8950dab257542", size: new index_1.ObjectSize(8, 2) };
    return Annotation;
}(index_1.Struct));
exports.Annotation = Annotation;
var ElementSize;
(function (ElementSize) {
    ElementSize[ElementSize["EMPTY"] = 0] = "EMPTY";
    ElementSize[ElementSize["BIT"] = 1] = "BIT";
    ElementSize[ElementSize["BYTE"] = 2] = "BYTE";
    ElementSize[ElementSize["TWO_BYTES"] = 3] = "TWO_BYTES";
    ElementSize[ElementSize["FOUR_BYTES"] = 4] = "FOUR_BYTES";
    ElementSize[ElementSize["EIGHT_BYTES"] = 5] = "EIGHT_BYTES";
    ElementSize[ElementSize["POINTER"] = 6] = "POINTER";
    ElementSize[ElementSize["INLINE_COMPOSITE"] = 7] = "INLINE_COMPOSITE";
})(ElementSize = exports.ElementSize || (exports.ElementSize = {}));
var CapnpVersion = /** @class */ (function (_super) {
    tslib_1.__extends(CapnpVersion, _super);
    function CapnpVersion() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CapnpVersion.prototype.getMajor = function () { return index_1.Struct.getUint16(0, this); };
    CapnpVersion.prototype.setMajor = function (value) { index_1.Struct.setUint16(0, value, this); };
    CapnpVersion.prototype.getMinor = function () { return index_1.Struct.getUint8(2, this); };
    CapnpVersion.prototype.setMinor = function (value) { index_1.Struct.setUint8(2, value, this); };
    CapnpVersion.prototype.getMicro = function () { return index_1.Struct.getUint8(3, this); };
    CapnpVersion.prototype.setMicro = function (value) { index_1.Struct.setUint8(3, value, this); };
    CapnpVersion.prototype.toString = function () { return "CapnpVersion_" + _super.prototype.toString.call(this); };
    CapnpVersion._capnp = { displayName: "CapnpVersion", id: "d85d305b7d839963", size: new index_1.ObjectSize(8, 0) };
    return CapnpVersion;
}(index_1.Struct));
exports.CapnpVersion = CapnpVersion;
var CodeGeneratorRequest_RequestedFile_Import = /** @class */ (function (_super) {
    tslib_1.__extends(CodeGeneratorRequest_RequestedFile_Import, _super);
    function CodeGeneratorRequest_RequestedFile_Import() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CodeGeneratorRequest_RequestedFile_Import.prototype.getId = function () { return index_1.Struct.getUint64(0, this); };
    CodeGeneratorRequest_RequestedFile_Import.prototype.setId = function (value) { index_1.Struct.setUint64(0, value, this); };
    CodeGeneratorRequest_RequestedFile_Import.prototype.getName = function () { return index_1.Struct.getText(0, this); };
    CodeGeneratorRequest_RequestedFile_Import.prototype.setName = function (value) { index_1.Struct.setText(0, value, this); };
    CodeGeneratorRequest_RequestedFile_Import.prototype.toString = function () { return "CodeGeneratorRequest_RequestedFile_Import_" + _super.prototype.toString.call(this); };
    CodeGeneratorRequest_RequestedFile_Import._capnp = { displayName: "Import", id: "ae504193122357e5", size: new index_1.ObjectSize(8, 1) };
    return CodeGeneratorRequest_RequestedFile_Import;
}(index_1.Struct));
exports.CodeGeneratorRequest_RequestedFile_Import = CodeGeneratorRequest_RequestedFile_Import;
var CodeGeneratorRequest_RequestedFile = /** @class */ (function (_super) {
    tslib_1.__extends(CodeGeneratorRequest_RequestedFile, _super);
    function CodeGeneratorRequest_RequestedFile() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CodeGeneratorRequest_RequestedFile.prototype.getId = function () { return index_1.Struct.getUint64(0, this); };
    CodeGeneratorRequest_RequestedFile.prototype.setId = function (value) { index_1.Struct.setUint64(0, value, this); };
    CodeGeneratorRequest_RequestedFile.prototype.getFilename = function () { return index_1.Struct.getText(0, this); };
    CodeGeneratorRequest_RequestedFile.prototype.setFilename = function (value) { index_1.Struct.setText(0, value, this); };
    CodeGeneratorRequest_RequestedFile.prototype.adoptImports = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(1, this)); };
    CodeGeneratorRequest_RequestedFile.prototype.disownImports = function () { return index_1.Struct.disown(this.getImports()); };
    CodeGeneratorRequest_RequestedFile.prototype.getImports = function () { return index_1.Struct.getList(1, CodeGeneratorRequest_RequestedFile._Imports, this); };
    CodeGeneratorRequest_RequestedFile.prototype.hasImports = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(1, this)); };
    CodeGeneratorRequest_RequestedFile.prototype.initImports = function (length) { return index_1.Struct.initList(1, CodeGeneratorRequest_RequestedFile._Imports, length, this); };
    CodeGeneratorRequest_RequestedFile.prototype.setImports = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(1, this)); };
    CodeGeneratorRequest_RequestedFile.prototype.toString = function () { return "CodeGeneratorRequest_RequestedFile_" + _super.prototype.toString.call(this); };
    CodeGeneratorRequest_RequestedFile.Import = CodeGeneratorRequest_RequestedFile_Import;
    CodeGeneratorRequest_RequestedFile._capnp = { displayName: "RequestedFile", id: "cfea0eb02e810062", size: new index_1.ObjectSize(8, 2) };
    return CodeGeneratorRequest_RequestedFile;
}(index_1.Struct));
exports.CodeGeneratorRequest_RequestedFile = CodeGeneratorRequest_RequestedFile;
var CodeGeneratorRequest = /** @class */ (function (_super) {
    tslib_1.__extends(CodeGeneratorRequest, _super);
    function CodeGeneratorRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CodeGeneratorRequest.prototype.adoptCapnpVersion = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(2, this)); };
    CodeGeneratorRequest.prototype.disownCapnpVersion = function () { return index_1.Struct.disown(this.getCapnpVersion()); };
    CodeGeneratorRequest.prototype.getCapnpVersion = function () { return index_1.Struct.getStruct(2, CapnpVersion, this); };
    CodeGeneratorRequest.prototype.hasCapnpVersion = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(2, this)); };
    CodeGeneratorRequest.prototype.initCapnpVersion = function () { return index_1.Struct.initStructAt(2, CapnpVersion, this); };
    CodeGeneratorRequest.prototype.setCapnpVersion = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(2, this)); };
    CodeGeneratorRequest.prototype.adoptNodes = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(0, this)); };
    CodeGeneratorRequest.prototype.disownNodes = function () { return index_1.Struct.disown(this.getNodes()); };
    CodeGeneratorRequest.prototype.getNodes = function () { return index_1.Struct.getList(0, CodeGeneratorRequest._Nodes, this); };
    CodeGeneratorRequest.prototype.hasNodes = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(0, this)); };
    CodeGeneratorRequest.prototype.initNodes = function (length) { return index_1.Struct.initList(0, CodeGeneratorRequest._Nodes, length, this); };
    CodeGeneratorRequest.prototype.setNodes = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(0, this)); };
    CodeGeneratorRequest.prototype.adoptRequestedFiles = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(1, this)); };
    CodeGeneratorRequest.prototype.disownRequestedFiles = function () { return index_1.Struct.disown(this.getRequestedFiles()); };
    CodeGeneratorRequest.prototype.getRequestedFiles = function () { return index_1.Struct.getList(1, CodeGeneratorRequest._RequestedFiles, this); };
    CodeGeneratorRequest.prototype.hasRequestedFiles = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(1, this)); };
    CodeGeneratorRequest.prototype.initRequestedFiles = function (length) { return index_1.Struct.initList(1, CodeGeneratorRequest._RequestedFiles, length, this); };
    CodeGeneratorRequest.prototype.setRequestedFiles = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(1, this)); };
    CodeGeneratorRequest.prototype.toString = function () { return "CodeGeneratorRequest_" + _super.prototype.toString.call(this); };
    CodeGeneratorRequest.RequestedFile = CodeGeneratorRequest_RequestedFile;
    CodeGeneratorRequest._capnp = { displayName: "CodeGeneratorRequest", id: "bfc546f6210ad7ce", size: new index_1.ObjectSize(0, 3) };
    return CodeGeneratorRequest;
}(index_1.Struct));
exports.CodeGeneratorRequest = CodeGeneratorRequest;
Node_Struct._Fields = capnp.CompositeList(Field);
Node_Enum._Enumerants = capnp.CompositeList(Enumerant);
Node_Interface._Methods = capnp.CompositeList(Method);
Node_Interface._Superclasses = capnp.CompositeList(Superclass);
Node._Parameters = capnp.CompositeList(Node_Parameter);
Node._NestedNodes = capnp.CompositeList(Node_NestedNode);
Node._Annotations = capnp.CompositeList(Annotation);
Field._Annotations = capnp.CompositeList(Annotation);
Enumerant._Annotations = capnp.CompositeList(Annotation);
Method._ImplicitParameters = capnp.CompositeList(Node_Parameter);
Method._Annotations = capnp.CompositeList(Annotation);
Brand_Scope._Bind = capnp.CompositeList(Brand_Binding);
Brand._Scopes = capnp.CompositeList(Brand_Scope);
CodeGeneratorRequest_RequestedFile._Imports = capnp.CompositeList(CodeGeneratorRequest_RequestedFile_Import);
CodeGeneratorRequest._Nodes = capnp.CompositeList(Node);
CodeGeneratorRequest._RequestedFiles = capnp.CompositeList(CodeGeneratorRequest_RequestedFile);

//# sourceMappingURL=schema.capnp.js.map
