"use strict";
/**
 * This file was **not** generated automatically. Historically it served as a template for the code generator.
 *
 * Notable differences from actual generated files are in comments below.
 *
 * @author jdiaz5513
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/* tslint:disable:no-use-before-declare max-classes-per-file */
// Note that this is a relative import; in an autogenerated file this would be `import * as capnp from 'capnp-ts';`.
var capnp = require("../../lib");
// ObjectSize must be brought into this file's scope, otherwise its type would not be usable. Struct is also brought in
// to keep the generate file size down (it's referenced a LOT!).
var lib_1 = require("../../lib");
exports._id = "b597bf4897e54f89";
var AddressBook = /** @class */ (function (_super) {
    tslib_1.__extends(AddressBook, _super);
    function AddressBook() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AddressBook.prototype.adoptPeople = function (value) {
        // There is no extra overhead to proxy through to the Pointer static methods via Struct like this since the original
        // function reference is copied as a static property.
        lib_1.Struct.adopt(value, lib_1.Struct.getPointer(0, this));
    };
    AddressBook.prototype.disownPeople = function () {
        return lib_1.Struct.disown(this.getPeople());
    };
    AddressBook.prototype.getPeople = function () {
        return lib_1.Struct.getList(0, AddressBook.People, this);
    };
    AddressBook.prototype.hasPeople = function () {
        return !lib_1.Struct.isNull(lib_1.Struct.getPointer(0, this));
    };
    AddressBook.prototype.initPeople = function (length) {
        return lib_1.Struct.initList(0, AddressBook.People, length, this);
    };
    AddressBook.prototype.setPeople = function (value) {
        lib_1.Struct.copyFrom(value, lib_1.Struct.getPointer(0, this));
    };
    AddressBook.prototype.toString = function () {
        return "AddressBook_" + _super.prototype.toString.call(this);
    };
    AddressBook._capnp = { displayName: "AddressBook", id: "", size: new lib_1.ObjectSize(0, 1) };
    return AddressBook;
}(lib_1.Struct));
exports.AddressBook = AddressBook;
var Person_PhoneNumber_Type;
(function (Person_PhoneNumber_Type) {
    Person_PhoneNumber_Type[Person_PhoneNumber_Type["MOBILE"] = 0] = "MOBILE";
    Person_PhoneNumber_Type[Person_PhoneNumber_Type["HOME"] = 1] = "HOME";
    Person_PhoneNumber_Type[Person_PhoneNumber_Type["WORK"] = 2] = "WORK";
})(Person_PhoneNumber_Type || (Person_PhoneNumber_Type = {}));
var Person_Employment = /** @class */ (function (_super) {
    tslib_1.__extends(Person_Employment, _super);
    function Person_Employment() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._initGroup = function () {
            lib_1.Struct.setUint16(4, 0, _this);
        };
        return _this;
    }
    Person_Employment.prototype.getEmployer = function () {
        lib_1.Struct.testWhich("employment", this.which(), 1, this);
        return lib_1.Struct.getText(3, this);
    };
    Person_Employment.prototype.getSchool = function () {
        lib_1.Struct.testWhich("employment", this.which(), 2, this);
        return lib_1.Struct.getText(3, this);
    };
    Person_Employment.prototype.isEmployer = function () {
        return this.which() === 1;
    };
    Person_Employment.prototype.isSchool = function () {
        return this.which() === 2;
    };
    Person_Employment.prototype.isSelfEmployed = function () {
        return this.which() === 3;
    };
    Person_Employment.prototype.isUnemployed = function () {
        return this.which() === 0;
    };
    Person_Employment.prototype.hasEmployer = function () {
        lib_1.Struct.testWhich("employment", this.which(), 1, this);
        return !lib_1.Struct.isNull(lib_1.Struct.getPointer(3, this));
    };
    Person_Employment.prototype.hasSchool = function () {
        lib_1.Struct.testWhich("employment", this.which(), 2, this);
        return !lib_1.Struct.isNull(lib_1.Struct.getPointer(3, this));
    };
    Person_Employment.prototype.setEmployer = function (value) {
        lib_1.Struct.setUint16(4, 1, this);
        lib_1.Struct.setText(3, value, this);
    };
    Person_Employment.prototype.setSchool = function (value) {
        lib_1.Struct.setUint16(4, 2, this);
        lib_1.Struct.setText(3, value, this);
    };
    Person_Employment.prototype.setSelfEmployed = function () {
        lib_1.Struct.setUint16(4, 3, this);
    };
    Person_Employment.prototype.setUnemployed = function () {
        lib_1.Struct.setUint16(4, 0, this);
    };
    Person_Employment.prototype.toString = function () {
        return "Person_Employment_" + _super.prototype.toString.call(this);
    };
    Person_Employment.prototype.which = function () {
        return lib_1.Struct.getUint16(4, this);
    };
    Person_Employment._capnp = {
        displayName: "Employment",
        id: "927f49708287c3b6",
        size: new lib_1.ObjectSize(8, 4)
    };
    Person_Employment.UNEMPLOYED = 0;
    Person_Employment.EMPLOYER = 1;
    Person_Employment.SCHOOL = 2;
    Person_Employment.SELF_EMPLOYED = 3;
    return Person_Employment;
}(lib_1.Struct));
var Person_PhoneNumber = /** @class */ (function (_super) {
    tslib_1.__extends(Person_PhoneNumber, _super);
    function Person_PhoneNumber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Person_PhoneNumber.prototype.getNumber = function () {
        return lib_1.Struct.getText(0, this);
    };
    Person_PhoneNumber.prototype.getType = function () {
        return lib_1.Struct.getUint16(0, this);
    };
    Person_PhoneNumber.prototype.setNumber = function (value) {
        lib_1.Struct.setText(0, value, this);
    };
    Person_PhoneNumber.prototype.setType = function (value) {
        lib_1.Struct.setUint16(0, value, this);
    };
    Person_PhoneNumber.prototype.toString = function () {
        return "Person_PhoneNumber_" + _super.prototype.toString.call(this);
    };
    Person_PhoneNumber._capnp = {
        displayName: "PhoneNumber",
        id: "cba8ed6b45001ccc",
        size: new lib_1.ObjectSize(2, 1)
    };
    Person_PhoneNumber.Type = Person_PhoneNumber_Type;
    return Person_PhoneNumber;
}(lib_1.Struct));
var Person = /** @class */ (function (_super) {
    tslib_1.__extends(Person, _super);
    function Person() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Person.prototype.adoptPhones = function (value) {
        lib_1.Struct.adopt(value, lib_1.Struct.getPointer(2, this));
    };
    Person.prototype.disownPhones = function () {
        return lib_1.Struct.disown(this.getPhones());
    };
    Person.prototype.getEmail = function () {
        return lib_1.Struct.getText(1, this);
    };
    Person.prototype.getEmployment = function () {
        return lib_1.Struct.getAs(Person_Employment, this);
    };
    Person.prototype.getId = function () {
        return lib_1.Struct.getUint32(0, this);
    };
    Person.prototype.getName = function () {
        return lib_1.Struct.getText(0, this);
    };
    Person.prototype.getPhones = function () {
        return lib_1.Struct.getList(2, Person.Phones, this);
    };
    Person.prototype.hasEmail = function () {
        return !lib_1.Struct.isNull(lib_1.Struct.getPointer(1, this));
    };
    Person.prototype.hasName = function () {
        return !lib_1.Struct.isNull(lib_1.Struct.getPointer(0, this));
    };
    Person.prototype.hasPhones = function () {
        return !lib_1.Struct.isNull(lib_1.Struct.getPointer(2, this));
    };
    Person.prototype.initEmployment = function () {
        var e = this.getEmployment();
        e._initGroup();
        return e;
    };
    Person.prototype.initPhones = function (length) {
        return lib_1.Struct.initList(2, Person.Phones, length, this);
    };
    Person.prototype.setEmail = function (value) {
        lib_1.Struct.setText(1, value, this);
    };
    Person.prototype.setId = function (value) {
        lib_1.Struct.setUint32(0, value, this);
    };
    Person.prototype.setName = function (value) {
        lib_1.Struct.setText(0, value, this);
    };
    Person.prototype.setPhones = function (value) {
        lib_1.Struct.copyFrom(value, lib_1.Struct.getPointer(2, this));
    };
    Person.prototype.toString = function () {
        return "Person_" + _super.prototype.toString.call(this);
    };
    Person._capnp = {
        displayName: "Person",
        id: "efbbc4e996f07104",
        size: new lib_1.ObjectSize(8, 4)
    };
    Person.Employment = Person_Employment;
    Person.PhoneNumber = Person_PhoneNumber;
    return Person;
}(lib_1.Struct));
exports.Person = Person;
AddressBook.People = capnp.CompositeList(Person);
Person.Phones = capnp.CompositeList(Person_PhoneNumber);

//# sourceMappingURL=serialization-demo.js.map
