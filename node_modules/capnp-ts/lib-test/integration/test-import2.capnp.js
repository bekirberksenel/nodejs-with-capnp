"use strict";
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var capnp_ts_1 = require("capnp-ts");
var schema_capnp_1 = require("capnp-ts/lib/std/schema.capnp");
var test_import_capnp_1 = require("./test-import.capnp");
var test_capnp_1 = require("./test.capnp");
exports._capnpFileId = "c64a3bf0338a124a";
var TestImport2 = /** @class */ (function (_super) {
    tslib_1.__extends(TestImport2, _super);
    function TestImport2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TestImport2.prototype.adoptFoo = function (value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(0, this)); };
    TestImport2.prototype.disownFoo = function () { return capnp_ts_1.Struct.disown(this.getFoo()); };
    TestImport2.prototype.getFoo = function () { return capnp_ts_1.Struct.getStruct(0, test_capnp_1.TestAllTypes, this); };
    TestImport2.prototype.hasFoo = function () { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(0, this)); };
    TestImport2.prototype.initFoo = function () { return capnp_ts_1.Struct.initStructAt(0, test_capnp_1.TestAllTypes, this); };
    TestImport2.prototype.setFoo = function (value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(0, this)); };
    TestImport2.prototype.adoptBar = function (value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(1, this)); };
    TestImport2.prototype.disownBar = function () { return capnp_ts_1.Struct.disown(this.getBar()); };
    TestImport2.prototype.getBar = function () { return capnp_ts_1.Struct.getStruct(1, schema_capnp_1.Node, this); };
    TestImport2.prototype.hasBar = function () { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(1, this)); };
    TestImport2.prototype.initBar = function () { return capnp_ts_1.Struct.initStructAt(1, schema_capnp_1.Node, this); };
    TestImport2.prototype.setBar = function (value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(1, this)); };
    TestImport2.prototype.adoptBaz = function (value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(2, this)); };
    TestImport2.prototype.disownBaz = function () { return capnp_ts_1.Struct.disown(this.getBaz()); };
    TestImport2.prototype.getBaz = function () { return capnp_ts_1.Struct.getStruct(2, test_import_capnp_1.TestImport, this); };
    TestImport2.prototype.hasBaz = function () { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(2, this)); };
    TestImport2.prototype.initBaz = function () { return capnp_ts_1.Struct.initStructAt(2, test_import_capnp_1.TestImport, this); };
    TestImport2.prototype.setBaz = function (value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(2, this)); };
    TestImport2.prototype.toString = function () { return "TestImport2_" + _super.prototype.toString.call(this); };
    TestImport2._capnp = { displayName: "TestImport2", id: "f6bd77f100ecb0ff", size: new capnp_ts_1.ObjectSize(0, 3) };
    return TestImport2;
}(capnp_ts_1.Struct));
exports.TestImport2 = TestImport2;

//# sourceMappingURL=test-import2.capnp.js.map
