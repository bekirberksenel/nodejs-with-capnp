"use strict";
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/**
 * This file has been automatically generated by the [capnpc-ts utility](https://github.com/jdiaz5513/capnp-ts).
 */
var capnp = require("../../lib/index");
var index_1 = require("../../lib/index");
exports._capnpFileId = "c81a48fa54bfdd1f";
var Upgrade = /** @class */ (function (_super) {
    tslib_1.__extends(Upgrade, _super);
    function Upgrade() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Upgrade.prototype.getLegacyName = function () { return index_1.Struct.getText(0, this); };
    Upgrade.prototype.setLegacyName = function (value) { index_1.Struct.setText(0, value, this); };
    Upgrade.prototype.getLegacyId = function () { return index_1.Struct.getInt32(0, this); };
    Upgrade.prototype.setLegacyId = function (value) { index_1.Struct.setInt32(0, value, this); };
    Upgrade.prototype.adoptSelfReference = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(1, this)); };
    Upgrade.prototype.disownSelfReference = function () { return index_1.Struct.disown(this.getSelfReference()); };
    Upgrade.prototype.getSelfReference = function () { return index_1.Struct.getStruct(1, Upgrade, this); };
    Upgrade.prototype.hasSelfReference = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(1, this)); };
    Upgrade.prototype.initSelfReference = function () { return index_1.Struct.initStructAt(1, Upgrade, this); };
    Upgrade.prototype.setSelfReference = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(1, this)); };
    Upgrade.prototype.adoptSelfReferences = function (value) { index_1.Struct.adopt(value, index_1.Struct.getPointer(2, this)); };
    Upgrade.prototype.disownSelfReferences = function () { return index_1.Struct.disown(this.getSelfReferences()); };
    Upgrade.prototype.getSelfReferences = function () { return index_1.Struct.getList(2, Upgrade._SelfReferences, this); };
    Upgrade.prototype.hasSelfReferences = function () { return !index_1.Struct.isNull(index_1.Struct.getPointer(2, this)); };
    Upgrade.prototype.initSelfReferences = function (length) { return index_1.Struct.initList(2, Upgrade._SelfReferences, length, this); };
    Upgrade.prototype.setSelfReferences = function (value) { index_1.Struct.copyFrom(value, index_1.Struct.getPointer(2, this)); };
    Upgrade.prototype.getNewHotnessName = function () { return index_1.Struct.getText(3, this); };
    Upgrade.prototype.setNewHotnessName = function (value) { index_1.Struct.setText(3, value, this); };
    Upgrade.prototype.getNewHotnessId = function () { return index_1.Struct.getInt32(4, this); };
    Upgrade.prototype.setNewHotnessId = function (value) { index_1.Struct.setInt32(4, value, this); };
    Upgrade.prototype.toString = function () { return "Upgrade_" + _super.prototype.toString.call(this); };
    Upgrade._capnp = { displayName: "Upgrade", id: "8fa95f1989e267fb", size: new index_1.ObjectSize(8, 4) };
    return Upgrade;
}(index_1.Struct));
exports.Upgrade = Upgrade;
Upgrade._SelfReferences = capnp.CompositeList(Upgrade);

//# sourceMappingURL=upgrade-v2.capnp.js.map
